"""
Django settings for ditexos project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os, environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(DEBUG=(bool, False))
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

SECRET_KEY = env('SECRET_KEY')
DEBUG = env.bool('DEBUG')

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_results',
    'django_celery_beat',
    'bootstrap4',
    'accounts',
    'yandex_direct',
    'calltouch',
    'google_ads',
    'amocrm',
    'excel',
    'dashboard',
    'comagic',
    'email_sender',
    'vk',
    'facebook',
    'my_target',
    'google_sheets',
    'core'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ditexos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'ditexos', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ditexos.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT')
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 3,
        }
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.CustomUser'

LOGIN_URL = '/account/login/'

AUTHENTICATION_BACKENDS = [
    'ditexos.auth_backends.UserEmailBackend',
]

if not DEBUG:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
else:
    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, 'static'),
    )

REDIS_HOST = env('REDIS_HOST')
REDIS_PORT = env('REDIS_PORT')

CELERY_TIMEZONE = TIME_ZONE
CELERY_RESULT_BACKEND = 'django-db'
CELERY_BROKER_URL = env('BROKER_URL')
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TASK_TRACK_STARTED = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue'
        }
    },
    'formatters': {
        'simple': {
            'format': '{asctime} {levelname} {message}',
            'style': '{',
            'datefmt': '%Y.%m.%d %H:%M:%S'
        }
    },
    'handlers': {
        'console_dev': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'filters': ['require_debug_true']
        },
        'console_prod': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'ERROR',
            'filters': ['require_debug_false']
        },
        'file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'logs/django.log',
            'maxBytes': 1048576,
            'backupCount': 10,
            'formatter': 'simple'
        },
        'celery': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'logs/celery.log',
            'formatter': 'simple',
            'maxBytes': 1048576,
            'backupCount': 10,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console_dev', 'console_prod'],
        },
        'django.server': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True
        },
        'celery': {
            'handlers': ['celery', 'console_dev'],
            'level': 'INFO',
        },
    }
}
from logging.config import dictConfig

dictConfig(LOGGING)

"""API YANDEX DIRECT."""
YANDEX_APP_ID = env('YANDEX_APP_ID')
YANDEX_APP_PASSWORD = env('YANDEX_APP_PASSWORD')
YANDEX_REDIRECT_URI = env('YANDEX_REDIRECT_URI')

"""API GOOGLE ADS."""
GOOGLE_DEVELOPER_TOKEN = env('GOOGLE_DEVELOPER_TOKEN')
GOOGLE_APP_ID = env('GOOGLE_APP_ID')
GOOGLE_PROJECT_ID = env('GOOGLE_PROJECT_ID')
GOOGLE_APP_PASSWORD = env('GOOGLE_APP_PASSWORD')
GOOGLE_REDIRECT_URIS = env.list('GOOGLE_REDIRECT_URIS')
GOOGLE_REDIRECT_URI = env('GOOGLE_REDIRECT_URI')

"""API GOOGLE SHEETS."""
GOOGLE_SHEETS_APP_ID = env('GOOGLE_SHEETS_APP_ID')
GOOGLE_SHEETS_PROJECT_ID = env('GOOGLE_SHEETS_PROJECT_ID')
GOOGLE_SHEETS_APP_PASSWORD = env('GOOGLE_SHEETS_APP_PASSWORD')
GOOGLE_SHEETS_REDIRECT_URIS = env('GOOGLE_SHEETS_REDIRECT_URIS')
GOOGLE_SHEETS_REDIRECT_URI = env('GOOGLE_SHEETS_REDIRECT_URI')

"""API VK."""
VK_APP_ID = env('VK_APP_ID')
VK_APP_SECRET = env('VK_APP_SECRET')
VK_REDIRECT_URI = env('VK_REDIRECT_URI')
VK_API_VERSION = '5.131'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = env('EMAIL_PORT')
EMAIL_USE_SSL = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
